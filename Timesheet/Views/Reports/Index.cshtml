@using Timesheet.Models
@using System.Diagnostics
@model Timesheet.Models.TimeSheet

@{
    Layout = null;
}

<!--This is the Supervisor role's view of time sheets, and has the capability to approve or deny
    a time sheet.-->
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Reports</title>
    <style>
        body {
            background-color: cadetblue;
            font-family: Arial;
        }

        .field-validation-error {
            color: red;
        }

        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
    </style>
</head>
<body>
    <!--Get employee, time sheet list and message objects from the session.-->
    @{  var emp = (Employee)Session["Employee"];
        var reportTimeList = (List<TimeSheet>)Session["TimeSheetList"];
        var message = (string)Session["Message"];
    }

    <div>
        <center>
            <img src="~/Content/ChatLogo.jpg" alt="ChatLogo" height="250" width="1520" />
        </center>
    </div>
    <div>
        <h1>Reports</h1>
        <br />
        <!--Form for supervisor to select an employee by name and a week ending date.-->
        <p>Select Employee</p>
        @using (Html.BeginForm("ReportData", "Reports", FormMethod.Post, new { role = "form" }))
    {
        @Html.LabelFor(x => x.Name)
        @Html.DropDownListFor(x => x.Name,
     Model.EmpNames,
     "-Select Employee-",
     new { @class = "form-control" })

        @Html.LabelFor(x => x.WeekEnding)
        @Html.DropDownListFor(x => x.WeekEnding,
     Model.WeekEndingDates,
     "-Select A Date-",
     new { @class = "form-control" })

        <button type="submit">Search</button>
}
        <br />
        <!--Display message content if it exists.-->
        @{
        if (@message != null)
        {
            <p style="text-align: center; color: white;">@message</p>
    }
        }

        <!--Table for viewing time sheet data.-->
        <table style="width:100%" cellpadding="4">
            <tr>
                <th></th>
                <th>Week end</th>
                <th>Date</th>
                <th>Start/ Time In</th>
                <th>Meal/ Time Out</th>
                <th>Meal/ Time In</th>
                <th>Finish/ Time Out</th>
                <th>Type of absence</th>
                <th>Absent hours</th>
                <th>Additional Hours</th>
                <th>Hours Worked</th>
                <th>Over Time</th>
                <th>Submitted</th>
                <th>Authorized</th>
            </tr>
            @{
            if (@reportTimeList != null)
            {
                foreach (TimeSheet reporttime in @reportTimeList)
                {
                    <tr>
                        <td></td>
                        <td>@reporttime.WeekEnding</td>
                        <td>@reporttime.Date</td>
                        <td>@reporttime.TimeIn</td>
                        <td>@reporttime.OutForLunch</td>
                        <td>@reporttime.InFromLunch</td>
                        <td>@reporttime.TimeOut</td>
                        <td>@reporttime.LeaveId</td>
                        <td>@reporttime.LeaveHours</td>
                        <td>@reporttime.AdditionalHours</td>
                        <td>@reporttime.TotalHoursWorked</td>
                        <td>
                            @{
                            string overtime;
                            Debug.WriteLine(reporttime.TotalHoursWorked);
                            int hoursWorked = Convert.ToInt16(reporttime.TotalHoursWorked.Split(':')[0]);
                            int minutesWorked = Convert.ToInt16(reporttime.TotalHoursWorked.Split(':')[1]);
                            if (hoursWorked < 8)
                            {
                                overtime = "0:0";
                            }
                            else
                            {
                                overtime = (hoursWorked - 8) + ":" + minutesWorked;
                            }
                            }
                            @overtime
                        </td>
                        <td>@reporttime.Submitted</td>
                        <td>@reporttime.AuthorizedBySupervisor</td>
                    </tr>
            }
        }
            }
        </table>
        <br />
        <!--Forms to approve or deny time sheet.-->
        @using (Html.BeginForm("Approve", "Reports", FormMethod.Post, new { role = "form" }))
    {
        <button type="submit">Approve</button>
}
        @using (Html.BeginForm("Deny", "Reports", FormMethod.Post, new { role = "form" }))
    {
        <button type="submit">Deny</button>
}
        <br />
        <!--Like to go back-->
        <a href="#" onclick="history.back();">Back</a>
        <br />
        <!--Log out link.-->
        <a href="@Url.Action("LogOut","Login")">LogOut</a>
    </div>
</body>
</html>






