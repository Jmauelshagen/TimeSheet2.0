@using Timesheet.Models
@using System.Diagnostics
@model Timesheet.Models.TimeSheet
@using System.Diagnostics

<!--Get employee, time sheet list and message objects from the session.-->
@{

    Employee sup = (Employee)Session["Supervisor"];
    Employee emp = (Employee)Session["Employee"];
    List<TimeSheet> reportTimeList = (List<TimeSheet>)Session["TimeSheetData"];
    string message = (string)Session["Message"];
    WeeklyReport weekly = new WeeklyReport();
}

@{
    Layout = null;

    if (@reportTimeList != null)
    {
        weekly = weekly.getWeeklyReport(emp.Banner_ID, reportTimeList[0].WeekEnding.Trim());       
    }
}
<script>
    window.setTimeout(function () {
        // This will execute 5 seconds later
        var label = document.getElementById('Message');
        if (label != null) {
            label.style.display = 'none';
        }
    }, 4000);

    function checkTime(i)//Check for single digit numbers in the seconds and minutes of the live clock
    {
        if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
        return i;
    }

    function formatAMPM()//Methods makes live clock
    {
        var today = new Date();
        var hours = today.getHours();
        var minutes = today.getMinutes();
        var seconds = today.getSeconds();
        seconds = checkTime(seconds);
        var ampm = hours >= 12 ? 'PM' : 'AM';
        hours = hours % 12;
        hours = hours ? hours : 12;
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;
        document.getElementById('time').innerHTML = strTime;
        var t = setTimeout(formatAMPM, 500);
    }
</script>

<style media="screen">
    .noPrint {
        display: block;
    }

    .yesPrint {
        display: block !important;
    }
</style>

<style media="print">
    .noPrint {
        display: none;
    }

    .yesPrint {
        display: block !important;
    }
</style>

<!--This is the Supervisor role's view of time sheets, and has the capability to approve or deny
    a time sheet.-->
<!DOCTYPE html>
<link rel="stylesheet" href="~/Content/Style.css" type="text/css" />


<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Reports</title>
</head>
<body onload="formatAMPM()">

    <div>
        <center>
            <img src="~/Content/ChatLogo.jpg" alt="ChatLogo" height="250" width="1520" />
        </center>
    </div>
    <div>
        <h1>Reports</h1>
        <!--Get and display current date and time.-->
        @{
            string today = DateTime.Now.ToLongDateString();
            string time = DateTime.Now.ToLongTimeString();
        }
        <p id="Time" style="text-align: center;">@today <div id="time" style="text-align: center;"></div></p>

        <!--Display message content if it exists.-->
        <label id="Message">@Html.DisplayFor(model => Session["Message"])</label>

        <div class="noPrint">
            <p>Select Employee </p>
            <p>
                @using (Html.BeginForm("ReportData", "Reports", FormMethod.Post, new { role = "form" }))
                {
                    @Html.LabelFor(x => x.Name)
                    @Html.DropDownListFor(x => x.Name,
                                                        Model.EmpNames,
                                                        "-Select Employee-",
                                                        new { @class = "form-control" })

                    @Html.LabelFor(x => x.WeekEnding)
                    @Html.DropDownListFor(x => x.WeekEnding,
                                                        Model.WeekEndingDates,
                                                        "-Select A Date-",
                                                        new { @class = "form-control" })

                    <button type="submit">Search</button>
                }
            </p>
        </div>

        @{
            if (@reportTimeList != null && @reportTimeList.Any())
            {
                Employee empReport = new Employee();
                Employee employee = empReport.GetEmployee(Convert.ToInt16(@reportTimeList[0].Banner_ID));
                <!--Form for supervisor to select an employee by name and a week ending date.-->
                <p>This is @emp.First_Name.Trim()'s timesheet for the week of @reportTimeList[0].WeekEnding</p><br />

                <!--Table to display time sheet input form.-->
                <div class="yesPrint">
                    <table class="center" id="Timesheet">
                        <tr>
                            <th style="display:none;">ID</th>
                            <th>Week end</th>
                            <th>Date</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>Type of absence</th>
                            <th>Absent hours</th>
                            <th>Additional Hours</th>
                            <th>Hours Worked Today</th>
                            <th>Over Time Today</th>
                            <th>Submitted</th>
                            <th>Approved</th>
                            <th style="display:none;">Banner Id</th>
                        </tr>
                        @{  for (int i = 0; i < 7; i++)
                            { 
                                Debug.WriteLine("Leave Id is: " + reportTimeList[i].LeaveId);
                                <tr>
                                    <!--Converted some of the textboxes to time input to reduce user error-->
                                    <td style="display:none;">@Html.TextBoxFor(model => model.Id, new { @Value = @reportTimeList[i].Id.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.WeekEnding, new { @Value = @reportTimeList[i].WeekEnding.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.Date, new { @Value = @reportTimeList[i].Date.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.TimeIn, new { type = "time", Value = @reportTimeList[i].TimeIn.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.OutForLunch, new { type = "time", Value = @reportTimeList[i].OutForLunch.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.InFromLunch, new { type = "time", Value = @reportTimeList[i].InFromLunch.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.TimeOut, new { type = "time", Value = @reportTimeList[i].TimeOut.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                    <td>
                                         @Html.DropDownListFor(model => model.LeaveId, new SelectList(
                                                          new List<object> {
                                                                                    new { value = 0 , text = "None" },
                                                                                    new { value = 1 , text = "Annual" },
                                                                                    new { value = 2 , text = "Sick"},
                                                                                    new { value = 3 , text = "Personal"},
                                                                                    new { value = 4 , text = "FLSA Comp"},
                                                                                    new { value = 5 , text = "Holiday"},
                                                                                    new { value = 6 , text = "Military"},
                                                                                    new { value = 7 , text = "Court"},
                                                                                    new { value = 8 , text = "Unpaid Leave" }
                                                          }, "value", "text", @reportTimeList[i].LeaveId))
                                    </td>
                                    @*<td>@Html.TextBoxFor(model => model.LeaveId, new { @Value = @reporttime.LeaveId.ToString().Trim(), @readonly = "readonly", style = "width: 75px;" })</td>*@
                                    <td>@Html.TextBoxFor(model => model.LeaveHours, new { @Value = @reportTimeList[i].LeaveHours.ToString().Trim(), pattern = "(1[0-2]|0?[0-9]):([14][5]|[03][0])$", title = "Please enter time as hours and minutes in format ##:## rounded to nearest 15", @readonly = "readonly", style = "width: 50px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.AdditionalHours, new { @Value = @reportTimeList[i].AdditionalHours.ToString().Trim(), pattern = "(1[0-2]|0?[0-9]):([14][5]|[03][0])$$", title = "Please enter time as hours and minutes in format ##:## rounded to nearest 15", @readonly = "readonly", style = "width: 75px;" })</td>
                                    @{ /** Calculates the hours worked for the day and check the return from TimeSheet.CalculateTotalHoursWorked to see if it is the first time through with no data, if its got 1 or 3 punches, or if 2 or 4 punches. **/
                                        string TotalHoursWorked = reporttime.CalculateWorkedHours(reporttime);
                                        Debug.WriteLine(TotalHoursWorked + "in total Hours");
                                        if (TotalHoursWorked.Equals("Missing Punch"))
                                        {

                                            <td bgcolor="lightyellow">@TotalHoursWorked</td>
                                        }
                                        else if (TotalHoursWorked.Equals("Error"))
                                        {
                                            <td bgcolor="salmon">@TotalHoursWorked</td>
                                        }
                                        else
                                        {
                                            <td>@TotalHoursWorked</td>
                                        }
                                    }
                                    <td>
                                        @{ /** Calculates the hours worked for the day and check the return from TimeSheet.CalculateTotalHoursWorked to see if it is the first time through with no data, if its got 1 or 3 punches, or if 2 or 4 punches. **/
                                            Debug.WriteLine(TotalHoursWorked + " Weekly Timesheet TotalHours Test 2 for overtime");
                                            string overtime = reportTimeList[i].GetOvertime();
                                            @overtime
                                         }
                                    </td>                                   
                                    <td>@Html.TextBoxFor(model => model.Submitted, new { @Value = @reportTimeList[i].Submitted.ToString().Trim(), @readonly = "readonly", style = "width: 75px;" })</td>
                                    <td>@Html.TextBoxFor(model => model.AuthorizedBySupervisor, new { @Value = @reportTimeList[i].AuthorizedBySupervisor.ToString().Trim(), @readonly = "readonly", style = "width: 75px;" })</td>
                                    <td style="display:none;">@Html.TextBoxFor(model => model.Banner_ID, new { @Value = @reportTimeList[i].Banner_ID.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                                </tr>
                                /**These add section for notes to be displayed if they exist**/
                                if (!String.IsNullOrEmpty(reportTimeList[i].Note))
                                {
                                    <tr>
                                        <td colspan="4" style="font-weight:bold;">Notes for additional hours worked</td>
                                        <td colspan="9" style="background-color:white;">@reportTimeList[i].Note.ToString().Trim()</td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                </div>
                <br />
                <div class="yesPrint">
                    <table class="center" id="WeeklyTotals">
                    <tr>
                        <th>Absent Hours</th>
                        <th>Worked Hours</th>
                        <th>Total Hours</th>
                        <th>Overtime worked</th>
                        <th>FLSA Overtime</th>
                    </tr>
                    <tr>
                        <!--Displaying Absent Hours used-->
                        @{
                            Debug.WriteLine("The weekly leave hours: " + weekly.LeaveHours);
                            if (!weekly.LeaveHours.Equals(""))
                            {
                                <td>@weekly.LeaveHours</td>
                            }

                            else
                            {
                                <td> 0 </td>
                            }
                        }
                        <!-- code for the color warning system for total hours worked-->
                        @{

                            Debug.WriteLine("The weekly hours: " + weekly.HoursWorked);
                            if (weekly.HoursWorked.Equals("Missing Punch"))
                            {
                                <td bgcolor="lightyellow">Missing Punch</td>
                            }
                            else if (weekly.HoursWorked.Equals("Error"))
                            {
                                <td bgcolor="salmon">Error</td>
                            }
                            else
                            {
                                <td>@weekly.HoursWorked</td>
                            }
                        }
                        <!--Displaying All Hours absent and worked-->
                        @{
                            Debug.WriteLine("The Final weekly hours: " + weekly.TotalHoursWorked);
                            if (weekly.TotalHoursWorked.Equals("Missing Punch"))
                            {
                                <td bgcolor="lightyellow">Missing Punch</td>
                            }
                            else if (weekly.TotalHoursWorked.Equals("Error"))
                            {
                                <td bgcolor="salmon">Error</td>
                            }
                            else
                            {
                                <td>@weekly.TotalHoursWorked</td>
                            }
                        }
                        <!--Displays the total overtime worked-->
                        @{
                            Debug.WriteLine("Overtime hours after multiplying by the FLSA 1.5 Weekly Timesheet: " + weekly.Overtime);
                            if (!weekly.Overtime.Equals(""))
                            {
                                <td>@weekly.Overtime</td>
                            }

                            else
                            {
                                <td> 0 </td>
                            }
                        }
                        <!--Displays the total overtime earned-->
                        @{
                            Debug.WriteLine("Overtime hours after multiplying by the FLSA 1.5 Weekly Timesheet: " + weekly.FLSA_Overtime);
                            if (!weekly.FLSA_Overtime.Equals(""))
                            {
                                <td>@weekly.FLSA_Overtime</td>
                            }

                            else
                            {
                                <td> 0 </td>
                            }
                        }
                    </tr>
                </table>
                </div>
                <br />
                <div class="noPrint">
                    @{
                        <!--Forms to approve or deny time sheet.-->
                        using (Html.BeginForm("Approve", "Reports", FormMethod.Post, new { role = "form" }))
                        {
                            <button type="submit">Approve</button>
                        }

                        using (Html.BeginForm("Deny", "Reports", FormMethod.Post, new { role = "form" }))
                        {
                            <button type="submit">Deny</button>
                        }
                    }
                </div>
            }
        }
        </div>

        <br/>

        <div class="noPrint">
            <!--Like to go back-->
            <a href="@Url.Action("Index","Supervisor")">Home</a>

            <!--To Go to approved Timesheet Page-->
            <a href="@Url.Action("ApprovedTimesheets", "ApprovedTimesheets")">Approved Timesheet</a>

            <button type="button" value="Print" onClick="window.print()">Print</button>

            <!--Log out link.-->
            <a href="@Url.Action("LogOut","Login")">LogOut</a>
        </div>
</body>
</html>






