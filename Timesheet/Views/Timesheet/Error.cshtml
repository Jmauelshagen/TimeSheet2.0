@model Timesheet.Models.TimeSheet
@using Timesheet.Models
@using System.Diagnostics
@{
    Layout = null;
}

<!--Screen that appears if an error occurs on the timesheet.-->
<!--Get employee, timesheet list and date list from the session.-->
@{
    ViewBag.Title = "Error";
    <div>
        <center>
            <img src="~/Content/ChatLogo.jpg" alt="ChatLogo" height="250" width="1520" />
        </center>
    </div>

    Employee emp = (Employee)Session["Employee"];
    List<TimeSheet> tsheets = (List<TimeSheet>)Session["TimeSheetData"];
    List<string> dates = (List<string>)Session["Dates"];

    //Calculating the total Weekly Hours worked
    string totalHours = "";
    string totalweekly = "";
    int hour = 0;
    int hours = 0;
    int minute = 0;
    int minutes = 0;

    /**Calculates the total hours for the week**/
    foreach (TimeSheet sheet in tsheets)
    {
        string hoursWorked = sheet.CalculateTotalHoursWorked(sheet);
        hours += Convert.ToInt16(hoursWorked.Split(':')[0]);
        minutes += Convert.ToInt16(hoursWorked.Split(':')[1]);
        if (minutes >= 60)
        {
            minutes = minutes - 60;
            hours = hours + 1;
        }
        totalHours = hours + ":" + minutes;
        totalweekly = totalHours;

        Debug.WriteLine("Running total: " + totalHours);
        Debug.WriteLine("Running total by the hours: " + hours);
    }

    /**Calculates total overtime that was made**/
    string overTime = "0:0";
    if (hours >= 40)
    {
        overTime = (hours - 40).ToString() + ":" + minute;
        int overtimeHours = 0;
        int overtimeMinutes = ((hours - 40) * 60 + minute) + (((hours - 40) * 60 + minute) / 2);
        while (overtimeMinutes >= 60)
        {
            overtimeHours = overtimeHours + 1;
            overtimeMinutes = overtimeMinutes - 60;
        }
        if (overtimeMinutes >= 53)
        {
            overTime = (overtimeHours + 1) + ":00";
        }
        if (overtimeMinutes >= 38 && overtimeMinutes <= 52)
        {
            overTime = overtimeHours + ":45";
        }
        if (overtimeMinutes >= 23 && overtimeMinutes <= 37)
        {
            overTime = overtimeHours + ":30";
        }
        if (overtimeMinutes <= 22 && overtimeMinutes >= 8)
        {
            overTime = overtimeHours + ":15";
        }
        if (overtimeMinutes <= 7)
        {
            overTime = overtimeHours + ":00";

        }
    }
    //double overtimeHours = 1.5 * (totalWeekly - 40);
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Timesheet</title>
    <style>
        body {
            background-color: cadetblue;
            font-family: Arial;
        }

        #login-div {
            position: absolute;
            left: 40%;
            top: 40%;
            padding: 10px 10px;
        }

        .field-validation-error {
            color: red;
        }

        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
    </style>

</head>
<body>

    <h2>Time Sheet</h2>
    <!--Get and display current date and time.-->
    @{ string today = DateTime.Now.ToLongDateString();
        string time = DateTime.Now.ToLongTimeString();}

    <p id="Time">It is @today at @time</p>
    <p style="text-align: center; color: white;">***Remember to enter your time in HH:MM AM/PM format***</p>

    <!--Table to display time sheet input form.-->
    <table style="width:100%" cellpadding="4">
        <colgroup span="4"></colgroup>
        <tr>
            <th></th>
            <th>Week end</th>
            <th>Date</th>
            <th>Start/ Time In</th>
            <th>Meal/ Time Out</th>
            <th>Meal/ Time In</th>
            <th>Finish/ Time Out</th>
            <th>Type of absence</th>
            <th>Absent hours</th>
            <th>Additional Hours</th>
            <th>Hours Worked</th>
            <th>Over Time</th>
            <th>Submitted</th>
        </tr>
        @{ for (int i = 0; i < 7; i++)
            {
                using (Html.BeginForm("SaveTimeSheet", "Timesheet", FormMethod.Post))
                {
                    <tr>
                        <!--Converted some of the textboxes to time input to reduce user error-->
                        <td>@Html.TextBoxFor(model => model.Id, new { @Value = @tsheets[i].Id.ToString().Trim(), @readonly = "readonly", style = "display: none; width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.WeekEnding, new { @Value = @tsheets[i].WeekEnding.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.Date, new { @Value = @tsheets[i].Date.ToString().Trim(), @readonly = "readonly", style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.TimeIn, new { type = "time", Value = @tsheets[i].TimeIn.ToString().Trim(), style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.OutForLunch, new { type = "time", Value = @tsheets[i].OutForLunch.ToString().Trim(), style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.InFromLunch, new { type = "time", Value = @tsheets[i].InFromLunch.ToString().Trim(), style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.TimeOut, new { type = "time", Value = @tsheets[i].TimeOut.ToString().Trim(), style = "width: 100px;" })</td>
                        <td>@Html.TextBoxFor(model => model.LeaveId, new { @Value = @tsheets[i].LeaveId.ToString().Trim(), style = "width: 75px;" })</td>
                        <td>@Html.TextBoxFor(model => model.LeaveHours, new { @Value = @tsheets[i].LeaveHours.ToString().Trim(), style = "width: 50px;" })</td>
                        <td>@Html.TextBoxFor(model => model.AdditionalHours, new { @Value = @tsheets[i].AdditionalHours.ToString().Trim(), style = "width: 75px;" })</td>
                        <td>@Html.TextBoxFor(model => model.TotalHoursWorked, new { @Value = @tsheets[i].TotalHoursWorked.ToString().Trim(), @readonly = "readonly", style = "width: 75px;" })</td>
                        <td>
                            @{ /** Calculates the hours worked for the day **/
                                Debug.WriteLine(tsheets[i].TotalHoursWorked + "in the table");
                                string hoursWorked = tsheets[i].CalculateTotalHoursWorked(tsheets[i]);
                                hour = Convert.ToInt16(hoursWorked.Split(':')[0]);
                                minute = Convert.ToInt16(hoursWorked.Split(':')[1]);
                                if (minute >= 60)
                                {
                                    minute = minute - 60;
                                    hour = hour + 1;
                                }
                                totalHours = hour + ":" + minute;

                                /** Calculates and overtime for the day **/
                                string overtime;
                                int hoursWorked2 = Convert.ToInt16(totalHours.Split(':')[0]);
                                int minutesWorked = Convert.ToInt16(totalHours.Split(':')[1]);
                                if (hoursWorked2 < 8)
                                {
                                    overtime = "";
                                }
                                else
                                {
                                    overtime = (hoursWorked2 - 8) + ":" + minutesWorked;
                                }
                            }
                            @overtime
                        </td>
                        <td>@Html.TextBoxFor(model => model.Submitted, new { @Value = @tsheets[i].Submitted.ToString().Trim(), @readonly = "readonly", style = "width: 75px;" })</td>
                        <td>@Html.TextBoxFor(model => model.AuthorizedBySupervisor, new { @Value = @tsheets[i].AuthorizedBySupervisor.ToString().Trim(), @readonly = "readonly", style = "display: none;" })</td>
                        <td>@Html.TextBoxFor(model => model.EmpId, new { @Value = @tsheets[i].EmpId.ToString().Trim(), @readonly = "readonly", style = "display: none;" })</td>
                        <td><input class="button" id="submit" type="submit" value="Save" /></td>
                    </tr>
                }
            }
        }
        <tr>
            <th colspan="8">Total absent Hours</th>
            <td><input type="text" name="totalAbsent" /></td>
            <th>Total weekly hours</th>
            <td><input type="text" name="totalWeekly" /></td>
            <script>
                var tD = new Date();
                var datestr = (tD.getMonth() + ) + "/" + tD.getDate() + "/" + tD.getFullYear();
                document.write("<input type='text' name='textField' value='" + datestr + "'>");
            </script>
        <tr>
            <th colspan="11">Overtime hours x1.5 to be added to prior FLSA comp balance</th>
            <td><input type="text" name="overtime" /></td>
        </tr>
    </table>
    <!--Log out link-->
    <a href="@Url.Action("LogOut", "Login")">LogOut</a>
</body>
</html>
